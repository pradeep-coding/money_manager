{"version":3,"sources":["components/MoneyDetails/index.js","components/TransactionItem/index.js","components/MoneyManager/index.js","App.js","index.js"],"names":["MoneyDetails","props","balanceAmount","incomeAmount","expensesAmount","className","src","alt","testid","TransactionItem","transactionDetails","deleteTransaction","id","title","amount","type","onClick","transactionTypeOptions","optionId","displayText","MoneyManager","state","transactionsList","inputTitle","inputAmount","inputType","onChangeInputTitle","event","setState","target","value","onChangeInputAmount","parseInt","onChangeInputType","onAddTransaction","preventDefault","find","eachTransaction","newTransaction","uuidv4","prevState","calculateExpenses","forEach","calculateIncome","calculateBalance","updatedTransactionsList","filter","this","onSubmit","htmlFor","placeholder","onChange","map","eachOption","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a554def.chunk.js","sourcesContent":["import './index.css'\n\nconst MoneyDetails = props => {\n  const {balanceAmount, incomeAmount, expensesAmount} = props\n  return (\n    <div className=\"money-details-container\">\n      <div className=\"balance-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/balance-image.png\"\n          alt=\"balance\"\n          className=\"logo\"\n        />\n        <div className=\"details-content\">\n          <p className=\"details-text\">Your Balance</p>\n          <p className=\"details-money\" testid=\"balanceAmount\">\n            Rs {balanceAmount}\n          </p>\n        </div>\n      </div>\n      <div className=\"income-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/income-image.png\"\n          alt=\"income\"\n          className=\"logo\"\n        />\n        <div className=\"details-content\">\n          <p className=\"details-text\">Your Income</p>\n          <p className=\"details-money\" testid=\"incomeAmount\">\n            Rs {incomeAmount}\n          </p>\n        </div>\n      </div>\n      <div className=\"expenses-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/expenses-image.png\"\n          alt=\"expenses\"\n          className=\"logo\"\n        />\n        <div className=\"details-content\">\n          <p className=\"details-text\">Your Expenses</p>\n          <p className=\"details-money\" testid=\"expensesAmount\">\n            Rs {expensesAmount}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MoneyDetails\n","import './index.css'\n\nconst TransactionItem = props => {\n  const {transactionDetails, deleteTransaction} = props\n  const {id, title, amount, type} = transactionDetails\n\n  const onDeleteTransaction = () => {\n    deleteTransaction(id)\n  }\n\n  return (\n    <li className=\"transaction-history\">\n      <p className=\"transaction-text\">{title}</p>\n      <p className=\"transaction-text\">RS {amount}</p>\n      <p className=\"transaction-text\">{type}</p>\n      <div className=\"delete-container\">\n        <button\n          className=\"delete-button\"\n          type=\"button\"\n          onClick={onDeleteTransaction}\n          testid=\"delete\"\n        >\n          <img\n            className=\"delete-icon\"\n            src=\"https://assets.ccbp.in/frontend/react-js/money-manager/delete.png\"\n            alt=\"delete\"\n          />\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default TransactionItem\n","import {Component} from 'react'\nimport {v4 as uuidv4} from 'uuid'\nimport MoneyDetails from '../MoneyDetails'\nimport TransactionItem from '../TransactionItem'\nimport './index.css'\n\nconst transactionTypeOptions = [\n  {\n    optionId: 'INCOME',\n    displayText: 'Income',\n  },\n  {\n    optionId: 'EXPENSES',\n    displayText: 'Expenses',\n  },\n]\n\nclass MoneyManager extends Component {\n  state = {\n    transactionsList: [],\n    inputTitle: '',\n    inputAmount: '',\n    inputType: transactionTypeOptions[0].optionId,\n  }\n\n  onChangeInputTitle = event => {\n    this.setState({inputTitle: event.target.value})\n  }\n\n  onChangeInputAmount = event => {\n    this.setState({inputAmount: parseInt(event.target.value)})\n  }\n\n  onChangeInputType = event => {\n    this.setState({inputType: event.target.value})\n  }\n\n  onAddTransaction = event => {\n    event.preventDefault()\n    const {inputTitle, inputAmount, inputType} = this.state\n\n    const optionType = transactionTypeOptions.find(\n      eachTransaction => eachTransaction.optionId === inputType,\n    )\n\n    const {displayText} = optionType\n\n    const newTransaction = {\n      id: uuidv4(),\n      title: inputTitle,\n      amount: parseInt(inputAmount),\n      type: displayText,\n    }\n\n    this.setState(prevState => ({\n      transactionsList: [...prevState.transactionsList, newTransaction],\n      inputTitle: '',\n      inputAmount: '',\n      inputType: transactionTypeOptions[0].optionId,\n    }))\n  }\n\n  calculateExpenses = () => {\n    const {transactionsList} = this.state\n    let expensesAmount = 0\n    transactionsList.forEach(eachTransaction => {\n      if (eachTransaction.type === transactionTypeOptions[1].displayText) {\n        expensesAmount += eachTransaction.amount\n      }\n    })\n    return expensesAmount\n  }\n\n  calculateIncome = () => {\n    const {transactionsList} = this.state\n    let incomeAmount = 0\n    transactionsList.forEach(eachTransaction => {\n      if (eachTransaction.type === transactionTypeOptions[0].displayText) {\n        incomeAmount += eachTransaction.amount\n      }\n    })\n    return incomeAmount\n  }\n\n  calculateBalance = () => {\n    const {transactionsList} = this.state\n    let expensesAmount = 0\n    let incomeAmount = 0\n    let balanceAmount = 0\n\n    transactionsList.forEach(eachTransaction => {\n      if (eachTransaction.type === transactionTypeOptions[1].displayText) {\n        expensesAmount += eachTransaction.amount\n      } else {\n        incomeAmount += eachTransaction.amount\n      }\n    })\n    balanceAmount = incomeAmount - expensesAmount\n    return balanceAmount\n  }\n\n  deleteTransaction = id => {\n    const {transactionsList} = this.state\n    const updatedTransactionsList = transactionsList.filter(\n      eachTransaction => eachTransaction.id !== id,\n    )\n    this.setState({transactionsList: updatedTransactionsList})\n  }\n\n  render() {\n    const {inputTitle, inputAmount, inputType, transactionsList} = this.state\n\n    const incomeAmount = this.calculateIncome()\n    const expensesAmount = this.calculateExpenses()\n    const balanceAmount = this.calculateBalance()\n    return (\n      <div className=\"money-manager_bg-container\">\n        <div className=\"money-manager-container\">\n          <div className=\"head-container\">\n            <h1>Hi, Pradeep</h1>\n            <p>\n              Welcome back to your\n              <span className=\"money-manager-text\"> Money Manager</span>\n            </p>\n          </div>\n          <MoneyDetails\n            incomeAmount={incomeAmount}\n            expensesAmount={expensesAmount}\n            balanceAmount={balanceAmount}\n          />\n          <div className=\"transactions-container\">\n            <form\n              className=\"add-transaction-container\"\n              onSubmit={this.onAddTransaction}\n            >\n              <h1 className=\"transaction-heading\">Add Transaction</h1>\n              <label htmlFor=\"input-title\">TITLE</label>\n              <input\n                type=\"text\"\n                placeholder=\"TITLE\"\n                id=\"input-title\"\n                value={inputTitle}\n                onChange={this.onChangeInputTitle}\n              />\n              <label htmlFor=\"input-amount\">AMOUNT</label>\n              <input\n                type=\"text\"\n                placeholder=\"AMOUNT\"\n                id=\"input-amount\"\n                value={inputAmount}\n                onChange={this.onChangeInputAmount}\n              />\n              <label htmlFor=\"input-type\">TYPE</label>\n              <select\n                id=\"input-type\"\n                value={inputType}\n                onChange={this.onChangeInputType}\n              >\n                {transactionTypeOptions.map(eachOption => (\n                  <option key={eachOption.optionId} value={eachOption.optionId}>\n                    {eachOption.displayText}\n                  </option>\n                ))}\n              </select>\n              <button type=\"submit\" className=\"add-button\">\n                Add\n              </button>\n            </form>\n            <div className=\"history-transactions\">\n              <h1 className=\"history\">History</h1>\n              <div className=\"history-transactions-container\">\n                <ul className=\"transactions-table\">\n                  <li className=\"history-headings\">\n                    <p className=\"history-heading\">Title</p>\n                    <p className=\"history-heading\">Amount</p>\n                    <p className=\"history-heading\">Type</p>\n                  </li>\n                  {transactionsList.map(eachTransaction => (\n                    <TransactionItem\n                      key={eachTransaction.id}\n                      transactionDetails={eachTransaction}\n                      deleteTransaction={this.deleteTransaction}\n                    />\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MoneyManager\n","import MoneyManager from './components/MoneyManager'\nimport './App.css'\n\nconst App = () => <MoneyManager />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}